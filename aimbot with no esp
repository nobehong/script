local aimKey = Enum.KeyCode.E -- Key to toggle aimbot
local aimEnabled = false
local maxDistance = 500 -- Max distance for aiming (can be adjusted)
local maxFOV = 70 -- Max Field of View for targeting (adjustable)

local player = game.Players.LocalPlayer
local camera = workspace.CurrentCamera

-- Toggle Aimbot on and off
game:GetService("UserInputService").InputBegan:Connect(function(input)
    if input.KeyCode == aimKey then
        aimEnabled = not aimEnabled
        print("Aimbot " .. (aimEnabled and "Enabled" or "Disabled"))
    end
end)

-- Check if target is within FOV (Field of View)
local function isTargetInFOV(targetPosition)
    local direction = (targetPosition - camera.CFrame.Position).unit
    local dot = camera.CFrame.LookVector:Dot(direction)
    local angle = math.acos(dot) * (180 / math.pi)
    return angle <= maxFOV
end

-- Get the closest target based on distance and FOV, excluding teammates
local function getClosestTarget()
    local closestPlayer = nil
    local shortestDistance = math.huge

    -- Loop through all players in the game
    for _, target in ipairs(game.Players:GetPlayers()) do
        -- Ensure target is not the player, alive, and has a humanoid model
        if target ~= player and target.Character and target.Character:FindFirstChild("HumanoidRootPart") then
            -- Check if the target is an enemy (excluding teammates)
            if not target.Team or target.Team ~= player.Team then
                local targetPos = target.Character.HumanoidRootPart.Position
                local distance = (player.Character.HumanoidRootPart.Position - targetPos).Magnitude

                -- Check if target is within distance and FOV
                if distance <= maxDistance and isTargetInFOV(targetPos) then
                    if distance < shortestDistance then
                        closestPlayer = target
                        shortestDistance = distance
                    end
                end
            end
        end
    end

    return closestPlayer
end

-- Aim at the target (Headshot targeting if available)
local function aimAt(target)
    if target and target.Character and target.Character:FindFirstChild("HumanoidRootPart") then
        -- Focus on the head if it exists for headshot targeting
        local targetHead = target.Character:FindFirstChild("Head")
        local targetPos = targetHead and targetHead.Position or target.Character.HumanoidRootPart.Position
        camera.CFrame = CFrame.new(camera.CFrame.Position, targetPos)
    end
end

-- Main Loop to check for target and aim
game:GetService("RunService").RenderStepped:Connect(function()
    if aimEnabled then
        local target = getClosestTarget()
        aimAt(target)
    end
end)
